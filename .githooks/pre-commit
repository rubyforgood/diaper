#!/bin/sh

early_exit=0

# Default to using sudo on Linux unless user is in 'docker' group
sudo=''
if [ "$(uname)" = 'Linux' ]; then
  user_in_docker_group_so_probably_no_need_for_sudo=$(groups|grep docker)
  if [ -z "$user_in_docker_group_so_probably_no_need_for_sudo" ]; then
    sudo='sudo'
    echo "Looks like you're on a Linux machine. Running all docker-compose commands with sudo..."
  fi
fi

# Only run if there are files staged for commit
changed_files=$(git diff --cached --name-only --diff-filter=ACM | paste -s -d' ' -)
if [ -n "$changed_files" ]; then

  # Run rubocop
  echo "Running rubocop $changed_files (this may take a few seconds)"
  if rubocop_results=$(bundle exec rubocop $changed_files 2>&1); then
    if $(echo $rubocop_results | grep -q "Offenses:" 2>&1); then
      >&2 echo "\n** Rubocop found some code style it disagreed with, try autofixing by running **\n  rubocop --auto-correct $changed_files\n"
    else
      echo "rubocop ran successfully; moving on to the next pre-commit check"
    fi
  else
    rubocop_docker_cmd="$sudo docker-compose run web rubocop $changed_files"
    echo "\nCannot run rubocop locally -- attempting to run under Docker\n  $rubocop_docker_cmd\n"
    if rubocop_results=$($rubocop_docker_cmd 2>&1); then
      echo "rubocop ran successfully in Docker; moving on to the next pre-commit check"
    else
      if $(echo $rubocop_results | grep -q "Offenses:" 2>&1); then
        >&2 echo "\n** Rubocop found some code style it disagreed with, try autofixing by running **\n  $sudo docker-compose run web rubocop --auto-correct $changed_files\n"
      else
        >&2 echo "Could not run rubocop. Please try running it manually and report the issue."
      fi
      early_exit=$(($early_exit + 1))
    fi
  fi

  # Run 'annotate' gem (populates app/models, spec/ with schema changes)
  echo "Running 'annotate' (almost done)"
  if annotate_results=$(bundle exec annotate); then
    echo "annotate ran successfully"
    if [ -n "$annotate_results" ]; then
      annotated_files=$(echo $annotate_results | awk -FAnnotated '{print $2}' | awk -F: '{print $2}' | sed s/,//g)
      if [ -z "$annotated_files" ]; then
        echo 'No files annotated'
      else
        >&2 echo "\n\n** Files updated with annotate! please git-add them and commit again **"
        >&2 echo "Run:\n  git add -p $annotated_files"
        early_exit=$(($early_exit + 1))
      fi
    else
      echo 'No files annotated'
    fi

  else
    annotate_cmd="$sudo docker-compose run web annotate"
    echo "Cannot run TODO rake task locally -- attempting to run under Docker\n  $annotate_cmd"
    if annotate_results=$($annotate_cmd); then
      if [ -n "$annotate_results" ]; then
        annotated_files=$(echo $annotate_results | awk -FAnnotated '{print $2}' | awk -F: '{print $2}' | sed s/,//g)
        if [ -z "$annotated_files" ]; then
          echo 'No files annotated'
        else
          >&2 echo "\n\n** Files updated with annotate! please git-add them and commit again **"
          >&2 echo "Run:\n  git add -p $annotated_files"
          early_exit=$(($early_exit + 1))
        fi
      else
        echo 'No files annotated'
      fi
    else
      >&2 echo "Could not run annotate. Please try running it manually and report the issue."
      early_exit=$(($early_exit + 1))
    fi
  fi

  if [ $early_exit -ne 0 ]; then
    >&2 echo "\n\n** git-commit ABORTED - see above **"
    exit 1
  else
    echo "\n\ngit pre-commit hooks successful - commiting staged changes now"
  fi
fi
